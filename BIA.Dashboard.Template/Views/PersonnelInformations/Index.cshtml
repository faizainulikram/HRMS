@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager
@model PaginatedList<BIA.Dashboard.Template.Models.PersonnelInformation>

@{
    ViewData["Title"] = "Index";
}

<nav class="navbar navbar-horizontal navbar-expand-md navbar-dark bg-default rounded">
    <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-collapse-header">
            <div class="row">
                <div class="col-6 collapse-close">
                    <button class="navbar-toggler navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                        <span></span>
                        <span></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="navbar-nav nav-fill w-100">
            <a class="nav-item nav-link" href="@Url.Action("Index")">Directory</a>
            <a class="nav-item nav-link" asp-action="Profile" asp-route-id=@userManager.GetUserId(User)>Personnel Information</a>
            @if ((await AuthorizationService.AuthorizeAsync(User, "PersonnelInformationHR")).Succeeded)
            {
                <a class="nav-item nav-link" asp-action="Verify">HR Verification</a>
                <a class="nav-item nav-link" asp-action="AuditLog">Audit Log</a>
            }
        </div>
    </div>
</nav>
<div class="row">
    <div class="col">
        <div class="card-header border-0">
            <h1 class="mb-5 text-center">Directory</h1>
            @*</div>
                <div class="card-header border-0">*@
            <div class="form-group" asp-controller="PersonnelInformations" asp-action="Index" method="get">
                <form asp-controller="PersonnelInformations" asp-action="Index" method="get">
                    @*<span class="input-group-text">Search Personnels: </span>*@
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="ni ni-zoom-split-in"></i></span>
                        </div>
                        <input class="form-control mr-2" type="text" name="SearchString">
                        <button type="submit" class="btn btn-primary btn-md mr-2" value="Filter">Search</button>
                        <button type="button" class="btn btn-secondary btn-md mr-2" value="Return to Index" onclick="window.location='@Url.Action("Index", "PersonnelInformations")'">Return to Index</button>
                    </div>
                </form>
            </div>
            @if ((await AuthorizationService.AuthorizeAsync(User, "PersonnelInformationHR")).Succeeded)
            {
                <button class="btn btn-success btn-md" onclick="window.location='@Url.Action("Create", "PersonnelInformations")'">Add</button>
            }
        </div>
        <div class="table-responsive">
            <table class="table align-items-center table-flush">
                <thead class="thead-flush">
                    <tr>
                        <th scope="col" width="20%">Name</th>
                        <th scope="col" width="20%">Extension Number</th>
                        <th scope="col" width="20%">Position</th>
                        <th scope="col" width="20%">Division</th>
                        <th scope="col" width="15%"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr id="row_@item.PersonnelId">
                            <td>@Html.DisplayFor(modelItem => item.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.ExtensionNumber)</td>
                            <td>@Html.DisplayFor(modelItem => item.CurrentPosition)</td>
                            <td>@Html.DisplayFor(modelItem => item.Division)</td>

                            <td>
                                @if ((await AuthorizationService.AuthorizeAsync(User, "PersonnelInformationHR")).Succeeded || (await AuthorizationService.AuthorizeAsync(User, "PersonnelInformationHOD")).Succeeded)
                                {
                                    <a asp-action="Details" asp-route-id="@item.PersonnelId" class="btn btn-sm btn-secondary">Details</a>
                                }
                                @if ((await AuthorizationService.AuthorizeAsync(User, "PersonnelInformationHR")).Succeeded)
                                {
                                    <a href="#" onclick="ConfirmDelete(@item.PersonnelId)" class="btn btn-sm btn-warning">Delete</a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="d-flex card-footer flex-row-reverse">

            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }
            <div class="p-2">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default btn-sm @prevDisabled">
                    Previous
                </a>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default btn-sm @nextDisabled">
                    Next
                </a>

            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title" id="myModalLabel">Delete Personnel</h3>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <h4>Are you sure you want to remove this personnel?</h4>

            </div>
            <div class="modal-footer">
                <a href="#" class="btn btn-default" data-dismiss="modal">Cancel</a>
                <a href="#" class="btn btn-warning" onclick="DeletePersonnel()">Confirm</a>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="spinnerModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-dialog-centered justify-content-center" role="document">
        <span class="fa fa-spinner fa-spin fa-3x"></span>
    </div>
</div>
<input type="hidden" id="hiddenPersonnelId" />
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">

        var ConfirmDelete = function (PersonnelId) {
            $("#hiddenPersonnelId").val(PersonnelId);
            $("#myModal").modal('show');
        }

        var DeletePersonnel = function () {
            var personnelId = $("#hiddenPersonnelId").val();
            //alert(personnelId)
            $.ajax({
                beforeSend: function (request) {
                    $("#myModal").modal("hide");
                    $("#spinnerModal").modal("show");
                    request.setRequestHeader("RequestVerificationToken", $("[name='__RequestVerificationToken']").val());
                },
                type: 'POST',
                url: '/PersonnelInformations/Delete',
                data: {
                    id: personnelId
                },
                success: function () {
                    $("#spinnerModal").modal("hide");
                    $("#row_" + personnelId).remove();
                    window.location.reload();
                }
            })
        }
    </script>
}