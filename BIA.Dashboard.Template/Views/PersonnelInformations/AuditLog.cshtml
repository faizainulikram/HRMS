@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager
@model PaginatedList<BIA.Dashboard.Template.Models.PersonnelInformationAuditLog>

@{
    ViewData["Title"] = "Index";
}

<nav class="navbar navbar-horizontal navbar-expand-md navbar-dark bg-default rounded">
    <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-collapse-header">
            <div class="row">
                <div class="col-6 collapse-close">
                    <button class="navbar-toggler navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
                        <span></span>
                        <span></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="navbar-nav nav-fill w-100">
            <a class="nav-item nav-link" href="@Url.Action("Index")">Directory</a>
            <a class="nav-item nav-link" asp-action="Profile" asp-route-id=@userManager.GetUserId(User)>Personnel Information</a>
            @if ((await AuthorizationService.AuthorizeAsync(User, "PersonnelInformationHR")).Succeeded)
            {
                <a class="nav-item nav-link" asp-action="Verify">HR Verification</a>
                <a class="nav-item nav-link" asp-action="AuditLog">Audit Log</a>
            }
        </div>
    </div>
</nav>
<div class="row">
    <div class="col">
        <div class="card-header border-0">
            <h1 class="mb-5 text-center">Audit Log</h1>
            @*</div>
                <div class="card-header border-0">*@
            <div class="form-group" asp-controller="PersonnelInformations" asp-action="AuditLog" method="get">
                <form asp-controller="PersonnelInformations" asp-action="AuditLog" method="get">
                    @*<span class="input-group-text">Search Personnels: </span>*@
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="ni ni-zoom-split-in"></i></span>
                        </div>
                        <input class="form-control mr-2" type="text" name="SearchString">
                        <button type="submit" class="btn btn-primary btn-md mr-2" value="Filter">Search</button>
                        <button type="button" class="btn btn-secondary btn-md mr-2" value="Return to Index" onclick="window.location='@Url.Action("AuditLog", "PersonnelInformations")'">Return to Index</button>
                    </div>
                </form>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table align-items-center table-flush">
                <thead class="thead-flush">
                    <tr>
                        <th scope="col" width="20%">Status</th>
                        <th scope="col" width="20%">Personnel</th>
                        <th scope="col" width="20%">Updated By</th>
                        <th scope="col" width="20%">Date</th>
                        @*<th scope="col" width="15%"></th>*@
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr id="row_@item.PersonnelInformationAuditLogId">
                            <td>@Html.DisplayFor(modelItem => item.Status)</td>
                            <td>@Html.DisplayFor(modelItem => item.PersonnelInformation.Name)</td>
                            <td>@Html.DisplayFor(modelItem => item.ApplicationUser.Email)</td>
                            <td>@Html.DisplayFor(modelItem => item.FormattedStatusDate)</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="d-flex card-footer flex-row-reverse">

            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }
            <div class="p-2">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default btn-sm @prevDisabled">
                    Previous
                </a>
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-pageNumber="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default btn-sm @nextDisabled">
                    Next
                </a>

            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
    </script>
}