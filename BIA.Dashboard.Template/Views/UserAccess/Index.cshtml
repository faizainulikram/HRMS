@model PaginatedList<BIA.Dashboard.Template.Models.Identity.ApplicationUser>

@{
    ViewData["Title"] = "Index";
}
<style>
    .inlineElement{
        display:inline !important;
    }
</style>
<div class="row">
    <div class="col">
        <div class="card-header border-0">
            <h1 class="mb-5 text-center">User Access Control</h1>
            <div class="form-group" asp-controller="UserAccess" asp-action="Index" method="get">
                <form asp-controller="UserAccess" asp-action="Index" method="get">
                    @*<span class="input-group-text">Search Personnels: </span>*@
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <span class="input-group-text"><i class="ni ni-zoom-split-in"></i></span>
                        </div>
                        <input class="form-control mr-2" type="text" name="SearchString">
                        <button type="submit" class="btn btn-primary btn-md mr-2" value="Filter">Search</button>
                        <button type="button" class="btn btn-secondary btn-md mr-2" value="Return to Index" onclick="window.location='@Url.Action("Index", "UserAccess")'">Return to Index</button>
                    </div>
                </form>
            </div>
            @*<a asp-area="Identity" asp-page="/Account/Register" class="btn btn-success btn-md" style="width:auto">
                Add New User
            </a>*@
            <a asp-action="AddNewUser" class="btn btn-success btn-md" style="width:auto">Add New User</a>
        </div>
        @*<button class="btn btn-success btn-md" onclick="window.location='@Url.Action("Create", "PersonnelInformations")'">Add</button>*@
        <div class="table-responsive">
            <table class="table align-items-center table-flush">
                <thead class="thead-flush">
                    <tr>
                        <th scope="col" width="50%">User</th>
                        <th scope="col" width="50%">Status</th>
                        <th scope="col" width="25%">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                    <tr id="row_@item.Id">
                        <td>@Html.DisplayFor(modelItem => item.Email)</td>
                        <td>
                            @if (item.IsEnabled == false)
                            {
                                <span class="badge badge-danger">Disabled</span>
                            }
                            else
                            {
                                <span class="badge badge-success">Enabled</span>
                            }

                        </td>
                        <td>
                            @if (User.Identity.Name != item.UserName)
                            {
                                <form method="post" class="inlineElement" asp-controller="UserAccess" asp-action="ChangeUserStatus" asp-route-id="@item.Id" asp-route-isenable="@(item.IsEnabled==false?0:1)">
                                    <button class='btn btn-sm @(item.IsEnabled==false?"btn-success":"btn-danger")' type="submit">@(item.IsEnabled==false?"Enable User":"Disable User")</button>
                                </form> <span>|</span>
                            }


                            <a asp-action="ManageUserClaims" asp-route-id="@item.Id" class="btn btn-sm btn-secondary">Manage Claims</a>

                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="d-flex card-footer flex-row-reverse">

        @{
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        }
            <div class="p-2">
                <a asp-action="Index"
                    asp-route-sortOrder="@ViewData["CurrentSort"]"
                    asp-route-pageNumber="@(Model.PageIndex - 1)"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]"
                    class="btn btn-default btn-sm @prevDisabled">
                    Previous
                </a>
                <a asp-action="Index"
                    asp-route-sortOrder="@ViewData["CurrentSort"]"
                    asp-route-pageNumber="@(Model.PageIndex + 1)"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]"
                    class="btn btn-default btn-sm @nextDisabled">
                    Next
                </a>
            </div>
        </div>
    </div>
</div>